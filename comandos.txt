

									COMANDOS UTILIZADOS DURANTE A TRILHA

**** iniciando o zookeeper:
windows: bin\windows\zookeeper-server-start.bat config\zookeeper.properties
linux: bin/zookeeper-server-start.sh config/zookeeper.properties



***** iniciando o kafka:
windows:bin\windows\kafka-server-start.bat config\server.properties
linux: bin/kafka-server-start.sh config/server.properties

Obs: no linux sempre se usa os comandos com .sh no windows dentro da pasta bin sempre se usa os comandos .bat


***** criando um tópico no kafka:
windows: bin\windows\kafka-topics.bat --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic LOJA_NOVO_PEDIDO
linux: bin/kafka-topics.sh --create --bootstrap-server localhost:9082 --replication-factor 1 --partitions 1 --topic LOJA_NOVO_PEDIDO 




**** mostrar os tópicos criados:
linux: bin/kafka-topics.sh --list --bootstrap-server localhost:9092 
windows: bin\windows\kafka-topics.bat --list --bootstrap-server localhost:9092




****** rodando um produtor de msgs(que produz as msgs):
linux: bin/kafka-console-producer.sh --broker-list localhost:9092  --topic LOJA_NOVO_PEDIDO 
windows: \bin\windows\kafka-console-producer.bat --broker-list localhost:9092 --topic LOJA_NOVO_PEDIDO





****** consumindo um tópico desde a primeira msg que está armazenada:
linux: bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic LOJA_NOVO_PEDIDO --from-beginning 
windows: bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic LOJA_NOVO_PEDIDO --from-beginning




********** descrevendo os tópicos:
linux: bin/kafka-topics.sh --describe --bootstrap-server localhost:9092 --describe
windows: bin\windows\kafka-topics.bat --describe --bootstrap-server localhost:9092 --describe



********** alterar um tópico (número de partição):

linux: bin/kafka-topics.sh --alter --bootstrap-server localhost:9092 --topic ECOMMERCE_NEW_ORDER --partitions 3 -- esse funcionou devido a versão do kafka

windows: bin\windows\kafka-topics.bat --alter --zookeeper localhost:9092 --topic ECOMMERCE_NEW_ORDER --partitions 3




******* analisar os grupos de consumo:

windows: bin\windows\kafka-consumer-groups.bat --all-groups --bootstrap-server localhost:9092 --describe
linux: bin/kafka-consumer-groups.sh --all-groups --bootstrap-server localhost:9092 --describe


*********** alterar a para que o broker se replique em outro broker:
obs: o fator de replicação não pode ser alterado com o comando alter, o kafka não permite Option "[replication-factor]" can't be used with option "[alter]"
Option                                   Description               
linux: bin/kafka-topics.sh --zookeeper  localhost:2181 --alter --topic ECOMMERCE_NEW_ORDER --partitions 3 --replication-factor 2 
bin/kafka-topics.sh --bootstrap-server localhost:9092 --alter --topic ECOMMERCE_NEW_ORDER --partitions 3 --replication-factor 2 --- esse deu certo devido a versão utilizada do kafka



*********** adicionando uma nova propriedade de replicação no config/server.properties:


***** conferindo todos os tópicos pelo zookeeper:
linux: bin/kafka-topics.sh --describe --zookeeper localhost:2181







